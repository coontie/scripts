RULEBASE: dev_ems_itd_custom 
	 OBJECT: dev1.wachovia.CIB.iTD.tradesphere.PnL.request
		 TEST: (pendingMessageCount >= 15)
			 CONSEQUENCE: postCondition(conditionName=${Posted.RED_ALERT}) 
			 CONSEQUENCE: sendAlertLow(alertMsg=Queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending to be consumed. The current threashold is set to 15., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is not moving., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
		 TEST: (pendingMessageCount InRange 10 15)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: ${Internal.Agent Name} queue ${name} is being consumed slowly., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
			 CONSEQUENCE: sendAlertLow(alertMsg=Queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 10)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is normal., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
	 OBJECT: dev2.wachovia.CIB.iTD.tradesphere.PnL.request
		 TEST: (pendingMessageCount >= 15)
			 CONSEQUENCE: postCondition(conditionName=${Posted.RED_ALERT}) 
			 CONSEQUENCE: sendAlertHigh(alertMsg=Queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount}  messages pending to be consumed. The current threashold is set to 15., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is not moving., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
		 TEST: (pendingMessageCount InRange 10 15)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: ${Internal.Agent Name} queue ${name} is being consumed slowly., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
			 CONSEQUENCE: sendAlertMedium(alertMsg=Queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 10)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is normal., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
	 OBJECT: dev.wachovia.CIB.iTD.tradesphere.domain.request
		 TEST: (pendingMessageCount >= 15)
			 CONSEQUENCE: postCondition(conditionName=${Posted.RED_ALERT}) 
			 CONSEQUENCE: sendAlertHigh(alertMsg=Queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending to be consumed. The current threashold is set to 15., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is not moving., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
		 TEST: (pendingMessageCount InRange 10 15)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: ${Internal.Agent Name} queue ${name} is being consumed slowly., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
			 CONSEQUENCE: sendAlertMedium(alertMsg=Queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 10)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is normal., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
	 OBJECT: dev.wachovia.CIB.iTD.tradesphere.top.request
		 TEST: (pendingMessageCount >= 15)
			 CONSEQUENCE: postCondition(conditionName=${Posted.RED_ALERT}) 
			 CONSEQUENCE: sendAlertHigh(alertMsg=Queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending to be consumed. The current threashold is set to 15., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is not moving., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
		 TEST: (pendingMessageCount InRange 10 15)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: ${Internal.Agent Name} queue ${name} is being consumed slowly., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
			 CONSEQUENCE: sendAlertMedium(alertMsg=Queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 10)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is normal., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
RULEBASE: devems05_ems_base 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7232) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7232) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7232) is down., To=igor.kantor1@my2way.com) 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7234) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7234) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7234) is down., To=igor.kantor1@my2way.com) 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7236) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7236) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7236) is down., To=igor.kantor1@my2way.com) 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7238) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7238) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7238) is down., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 800) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 800) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 800) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 800) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
RULEBASE: drems05_ems_base 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7222) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7222) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7222) is down., To=igor.kantor1@my2way.com) 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7224) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7224) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7224) is down., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
RULEBASE: drems05_ems_custom 
		 TEST: (userName Equals sec20ibprod)
			 CONSEQUENCE: sendMail(CC=, Content=${userName} has connected to ${Internal.Agent Name}., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=ALERT: ${userName} has connected to ${Internal.Agent Name}., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
			 CONSEQUENCE: sendAlertLow(alertMsg=${userName} has connected to ${Internal.Agent Name}.) 
RULEBASE: drems06_ems_base 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7222) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7222) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7222) is down., To=igor.kantor1@my2way.com) 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7224) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7224) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7224) is down., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
RULEBASE: drems06_ems_custom 
		 TEST: (userName Equals sec20ibprod)
			 CONSEQUENCE: sendMail(CC=, Content=${userName} has connected to ${Internal.Agent Name}., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=ALERT: ${userName} has connected to ${Internal.Agent Name}., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
			 CONSEQUENCE: sendAlertLow(alertMsg=${userName} has connected to ${Internal.Agent Name}.) 
RULEBASE: ems_custom_1psr_prod 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.PHASE3
		 TEST: (receiverCount != 15)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} has ${receiverCount} receivers. , From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Prod@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.CFS.CONFIRMATION.PHASE3
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Prod@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.CFS.REPLAY.PHASE3
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Prod@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.CFS.CONFIRMATION.GLOSS
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Prod@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.CFS.REPLAY.GLOSS
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Prod@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.IN.ROUTE
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Prod@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.AUDIT.IN
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Prod@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.GLOSS
		 TEST: (receiverCount != 2)
			 CONSEQUENCE: sendMail(CC=NDS.Technology@funb.com, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=NDS.Technology@funb.com, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=NDS.Technology@funb.com, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Prod@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.AUDIT.OUT
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Prod@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Prod@funb.com) 
RULEBASE: ems_custom_1psr_uat 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.PHASE3
		 TEST: (receiverCount != 5)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} has ${receiverCount} receivers. , From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.CFS.CONFIRMATION.PHASE3
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.CFS.REPLAY.PHASE3
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.CFS.CONFIRMATION.GLOSS
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.CFS.REPLAY.GLOSS
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.IN.ROUTE
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.AUDIT.IN
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.GLOSS
		 TEST: (receiverCount != 2)
			 CONSEQUENCE: sendMail(CC=NDS.Technology@funb.com, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=NDS.Technology@funb.com, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=NDS.Technology@funb.com, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.AUDIT.OUT
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.FISTS.FIRM12
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.FISTS.FIRM51
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.FISTS.FIRM53
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.FISTS.FIRM54
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
	 OBJECT: Wachovia.CIB.1PSR.PS.OUT.FISTS.FIRM55
		 TEST: (receiverCount != 1)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has ${receiverCount} receivers., To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 50)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSWarning: Queue ${name} on ${Internal.Agent Name} has more than 50 messages pending!, To=CIBPushService.Dev@funb.com) 
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, From=HawkAgent@wachovia.net, Mail Server=smtp.wachovia.net, Subject=EMSError: Queue ${name} on ${Internal.Agent Name} has more than 100 messages pending!, To=CIBPushService.Dev@funb.com) 
RULEBASE: ems_custom_monitoring_uat_prod 
	 OBJECT: Wachovia.CIB.1sdk
		 TEST: (pendingMessageCount > 100)
			 CONSEQUENCE: sendAlertMedium(alertMsg=Queue  ${name}  has  ${pendingMessageCount} messages pending. ) 
			 CONSEQUENCE: sendMail(CC=cib.salesdesktop@funb.com, Content=Queue ${name} has  ${pendingMessageCount} messages pending., From=HawkAgent, Mail Server=smtp.wachovia.net, Subject=Queue ${name} has  ${pendingMessageCount} messages pending., To=cib.tibco.support@funb.com) 
RULEBASE: ems_primary 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=Primary EMS on ${Internal.Agent Name} is down! ) 
			 CONSEQUENCE: sendMail(CC=, Content=Primary EMS on ${Internal.Agent Name} is down, From=HawkEventMonitor@hawk-mgmt.wachovia.net, Mail Server=smtp.wachovia.net, Subject=Primary EMS on ${Internal.Agent Name} is down, To=cib.tibco.support@funb.com) 
		 TEST: (running isTrue )
			 CONSEQUENCE: sendMail(CC=, Content=Primary EMS on ${Internal.Agent Name} is up and running., From=HawkEventMonitor@hawk-mgmt.wachovia.net, Mail Server=smtp.wachovia.net, Subject=Primary EMS on ${Internal.Agent Name} is up and running., To=cib.tibco.support@wachovia.com) 
	 OBJECT: 
		 TEST: (pendingMessageSize > 2000000000)
			 CONSEQUENCE: sendAlertLow(alertMsg=Queue  ${name} on ${Internal.Agent Name} is over 2G in size.  ) 
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${description} on ${Internal.Agent Name} is over 2G in size. , From=HawkEventMonitor@hawk-mgmt.wachovia.net, Mail Server=smtp.wachovia.net, Subject=Queue ${name} on ${Internal.Agent Name} is over 2G in size!, To=cib.tibco.support@funb.com) 
		 TEST: (numConnects > 3000)
			 CONSEQUENCE: sendAlertHigh(alertMsg=Number of connections to ${Internal.Agent Name} is now  ${numConnects}! ) 
			 CONSEQUENCE: sendMail(CC=, Content=There are now  ${numConnects} connections to ${Internal.Agent Name}!, From=HawkEventMonitor@hawk-mgmt.wachovia.net, Mail Server=smtp.wachovia.net, Subject=Total number of connections to ${Internal.Agent Name} exceeded 3000!, To=cib.tibco.support@funb.com) 
	 OBJECT: 
		 TEST: (pendingMessageSize > 2000000000)
			 CONSEQUENCE: sendAlertHigh(alertMsg=Topic ${name} on ${Internal.Agent Name} is over 2G in size) 
			 CONSEQUENCE: sendMail(CC=, Content=Topic ${description} on ${Internal.Agent Name} is over 2G in size. , From=cib.tibco.support@funb.com, Mail Server=smtp.wachovia.net, Subject=Topic ${name} on ${Internal.Agent Name} is over 2G in size!, To=cib.tibco.support@funb.com) 
		 TEST: (Virtual KBytes > 2000000)
			 CONSEQUENCE: sendAlertHigh(alertMsg=Process  ${Process Name} is using more than 2G of RAM! ) 
			 CONSEQUENCE: sendMail(CC=, Content=Process  ${Process Name}  on ${Internal.Agent Name} is using more than 2G of RAM!, From=HawkAgent@mgmnt, Mail Server=smtp.wachovia.net, Subject=Process  ${Process Name}  on ${Internal.Agent Name} is using more than 2G of RAM!, To=cib.tibco.support@wachovia.com) 
RULEBASE: ems_primary_calypso 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=Primary EMS on ${Internal.Agent Name} is down! ) 
			 CONSEQUENCE: sendMail(CC=, Content=Primary EMS on ${Internal.Agent Name} is down, From=HawkEventMonitor@hawk-mgmt.wachovia.net, Mail Server=smtp.wachovia.net, Subject=Primary EMS on ${Internal.Agent Name} is down, To=cib.tibco.support@funb.com) 
		 TEST: (running isTrue )
			 CONSEQUENCE: sendMail(CC=, Content=Primary EMS on ${Internal.Agent Name} is up and running., From=HawkEventMonitor@hawk-mgmt.wachovia.net, Mail Server=smtp.wachovia.net, Subject=Primary EMS on ${Internal.Agent Name} is up and running., To=cib.tibco.support@wachovia.com) 
	 OBJECT: 
		 TEST: (pendingMessageSize > 2000000000)
			 CONSEQUENCE: sendAlertLow(alertMsg=Queue  ${name} on ${Internal.Agent Name} is over 1G in size.  ) 
			 CONSEQUENCE: sendMail(CC=, Content=Queue ${description} on ${Internal.Agent Name} is over 1G in size. , From=HawkEventMonitor@hawk-mgmt.wachovia.net, Mail Server=smtp.wachovia.net, Subject=Queue ${name} on ${Internal.Agent Name} is over 1G in size!, To=cib.tibco.support@funb.com) 
		 TEST: (numConnects > 3000)
			 CONSEQUENCE: sendAlertHigh(alertMsg=Number of connections to ${Internal.Agent Name} is now  ${numConnects}! ) 
			 CONSEQUENCE: sendMail(CC=, Content=There are now  ${numConnects} connections to ${Internal.Agent Name}!, From=HawkEventMonitor@hawk-mgmt.wachovia.net, Mail Server=smtp.wachovia.net, Subject=Total number of connections to ${Internal.Agent Name} exceeded 3000!, To=cib.tibco.support@funb.com) 
	 OBJECT: 
		 TEST: (pendingMessageCount > 30000)
			 CONSEQUENCE: sendAlertHigh(alertMsg=Topic  ${name}  has more than 30K messages pending!) 
			 CONSEQUENCE: sendMail(CC=, Content=Topic ${name} on ${Internal.Agent Name}  has more than 30K messages pending!, From=HawkEventMonitor@hawk-mgmt.wachovia.net, Mail Server=smtp.wachovia.net, Subject=Topic ${name} on ${Internal.Agent Name} has more than 30K messages pending!, To=cib.tibco.support@funb.com) 
RULEBASE: ems_secondary 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=Secondary EMS on ${Internal.Agent Name} is down! ) 
			 CONSEQUENCE: sendMail(CC=, Content=Secondary EMS on ${Internal.Agent Name} is down!, From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=Secondary EMS on ${Internal.Agent Name} is down!, To=cib.tibco.support@funb.com) 
		 TEST: (running isTrue )
			 CONSEQUENCE: sendMail(CC=, Content=Secondary EMS on ${Internal.Agent Name} is up and running., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=Secondary EMS on ${Internal.Agent Name} is up and running., To=cib.tibco.support@wachovia.com) 
RULEBASE: hawk_event_agent_monitor_ems_dev 
		 TEST: (Hawk Domain Equals HawkMon)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Agent Name} HawkAgent is down.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Agent Name} HawkAgent is down., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent is down., To=cib.tibco.support@wachovia.com) 
		 TEST: (Hawk Domain Contains HawkMon)
			 CONSEQUENCE: sendAlertLow(alertMsg=${Agent Name} HawkAgent has restarted. ) 
			 CONSEQUENCE: sendMail(CC=, Content=${Agent Name} HawkAgent has restarted., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent has restarted., To=cib.tibco.support@wachovia.com) 
RULEBASE: hawk_event_agent_monitor_ems_prod 
		 TEST: (Hawk Domain Equals HawkMon)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Agent Name} HawkAgent is down.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Agent Name} HawkAgent is down., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent is down., To=cib.tibco.support@wachovia.com) 
		 TEST: (Hawk Domain Contains HawkMon)
			 CONSEQUENCE: sendAlertLow(alertMsg=${Agent Name} HawkAgent has restarted.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Agent Name} HawkAgent has restarted., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent has restarted., To=cib.tibco.support@wachovia.com) 
RULEBASE: hawk_event_agent_monitor_ems_uat 
		 TEST: (Hawk Domain Equals HawkMon)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Agent Name} HawkAgent is down.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Agent Name} HawkAgent is down., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent is down., To=cib.tibco.support@wachovia.com) 
		 TEST: (Hawk Domain Contains HawkMon)
			 CONSEQUENCE: sendAlertLow(alertMsg=${Agent Name} HawkAgent has restarted.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Agent Name} HawkAgent has restarted., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent has restarted., To=cib.tibco.support@wachovia.com) 
RULEBASE: hawk_event_agent_monitor_rv_dev 
		 TEST: (Hawk Domain Equals HawkMon)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Agent Name} HawkAgent is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Agent Name} HawkAgent is down., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent is down., To=igor.kantor1@my2way.com) 
		 TEST: (Hawk Domain Contains HawkMon)
			 CONSEQUENCE: sendAlertLow(alertMsg=${Agent Name} HawkAgent has restarted.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Agent Name} HawkAgent has restarted., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent has restarted., To=cib.tibco.support@wachovia.com) 
RULEBASE: hawk_event_agent_monitor_rv_prod 
		 TEST: (Hawk Domain Equals HawkMon)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Agent Name} HawkAgent is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Agent Name} HawkAgent is down., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent is down., To=igor.kantor1@my2way.com) 
		 TEST: (Hawk Domain Contains HawkMon)
			 CONSEQUENCE: sendAlertLow(alertMsg=${Agent Name} HawkAgent has restarted.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Agent Name} HawkAgent has restarted., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent has restarted., To=cib.tibco.support@wachovia.com) 
RULEBASE: hawk_event_agent_monitor_rv_uat 
		 TEST: (Hawk Domain Equals HawkMon)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Agent Name} HawkAgent is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Agent Name} HawkAgent is down., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent is down., To=igor.kantor1@my2way.com) 
		 TEST: (Hawk Domain Contains HawkMon)
			 CONSEQUENCE: sendAlertLow(alertMsg=${Agent Name} HawkAgent has restarted.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Agent Name} HawkAgent has restarted., From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Agent Name} HawkAgent has restarted., To=cib.tibco.support@wachovia.com) 
RULEBASE: ldap_master_slave 
		 TEST: (Process Count < 2)
			 CONSEQUENCE: sendAlertHigh(alertMsg=One of the LDAP servers died on ${Internal.Agent Name} ) 
			 CONSEQUENCE: sendMail(CC=, Content=One of the LDAP servers died on ${Internal.Agent Name}, From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=One of the LDAP servers died on ${Internal.Agent Name}, To=cib.tibco.support@funb.com) 
		 TEST: (Process Count == 2)
			 CONSEQUENCE: sendMail(CC=, Content=${Process Name} process count:  ${Process Count} , From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=All of LDAP servers on ${Internal.Agent Name} are now operational., To=cib.tibco.support@funb.com) 
RULEBASE: ldap_stand_alone 
		 TEST: (Process Count < 1)
			 CONSEQUENCE: sendAlertHigh(alertMsg=LDAP server died on ${Internal.Agent Name} ) 
			 CONSEQUENCE: sendMail(CC=, Content=LDAP server is no longer running on ${Internal.Agent Name} , From=HawkEventMonitor@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=LDAP server is no longer running on ${Internal.Agent Name} , To=cib.tibco.support@funb.com) 
RULEBASE: os_base 
		 TEST: (% Used > 70)
			 CONSEQUENCE: sendMail(CC=, Content=${Mount Point} on ${Internal.Agent Name} is more than 70% full. , From=HawkEventMonitor@hawk-mgmnt, Mail Server=smtp.wachovia.net, Subject=${Mount Point} on ${Internal.Agent Name} is more than 70% full., To=cib.tibco.support@wachovia.com) 
		 TEST: (Avg Running (15 min) > 5.0)
			 CONSEQUENCE: sendAlertHigh(alertMsg=System load average on ${Internal.Agent Name} is too high. ) 
			 CONSEQUENCE: sendMail(CC=, Content=System load average on ${Internal.Agent Name}  is too high., From=HawkEventMonitor@mgmnt, Mail Server=smtp.wachovia.net, Subject=System load average on ${Internal.Agent Name}  is too high., To=cib.tibco.support@wachovia.com) 
		 TEST: (Virtual KBytes > 2000000)
			 CONSEQUENCE: sendMail(CC=, Content=Process  ${Process Name} on ${Internal.Agent Name} is using more than 2G of memory., From=HawkEventMonitor@mgmnt, Mail Server=smtp.wachovia.net, Subject=Process  ${Process Name} on ${Internal.Agent Name} is using more than 2G of memory., To=cib.tibco.support@wachovia.com) 
RULEBASE: prodems01_ems_itd_custom 
	 OBJECT: prod.wachovia.CIB.iTD.tradesphere.domain.request
		 TEST: (pendingMessageCount >= 15)
			 CONSEQUENCE: postCondition(conditionName=${Posted.RED_ALERT}) 
			 CONSEQUENCE: sendAlertMedium(alertMsg=${Internal.Agent Name} queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=onesource.support@wachovia.com, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending to be consumed. Current threashold is set to 15., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=PROD ALERT: ${Internal.Agent Name} queue ${name} is not moving., To=FI.supplevel2@wachovia.com) 
		 TEST: (pendingMessageCount InRange 10 15)
			 CONSEQUENCE: sendMail(CC=onesource.support@wachovia.com, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=PROD WARNING: ${Internal.Agent Name} queue ${name} is being consumed slowly., To=FI.supplevel2@wachovia.com) 
			 CONSEQUENCE: sendAlertMedium(alertMsg=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 10)
			 CONSEQUENCE: sendMail(CC=onesource.support@wachovia.com, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=PROD INFO: ${Internal.Agent Name} queue ${name} is normal., To=FI.supplevel2@wachovia.com) 
	 OBJECT: prod.wachovia.CIB.iTD.tradesphere.top.request
		 TEST: (pendingMessageCount >= 15)
			 CONSEQUENCE: sendAlertHigh(alertMsg=RED_ALERT) 
			 CONSEQUENCE: sendAlertLow(alertMsg=${Internal.Agent Name} queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=onesource.support@wachovia.com, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending to be consumed. Current threshold is set to 15., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=PROD ALERT: ${Internal.Agent Name} queue ${name} is not moving., To=FI.supplevel2@wachovia.com) 
		 TEST: (pendingMessageCount InRange 10 15)
			 CONSEQUENCE: sendMail(CC=onesource.support@wachovia.com, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=PROD WARNING: ${Internal.Agent Name} queue ${name} is being consumed slowly., To=FI.supplevel2@wachovia.com) 
			 CONSEQUENCE: sendAlertMedium(alertMsg=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 10)
			 CONSEQUENCE: sendMail(CC=onesource.support@wachovia.com, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=PROD INFO: ${Internal.Agent Name} queue ${name} is normal., To=FI.supplevel2@wachovia.com) 
RULEBASE: prodems05_ems_base 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7222) is down.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} EMS (instance 7222) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7222) is down., To=cib.tibco.support@wachovia.com) 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7224) is down.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} EMS (instance 7224) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7224) is down., To=cib.tibco.support@wachovia.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=cib.tibco.support@wachovia.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=cib.tibco.support@wachovia.com) 
		 TEST: (Virtual KBytes > 2000000)
			 CONSEQUENCE: sendAlertHigh(alertMsg=Process  ${Process Name} is using more than 2G of RAM! ) 
			 CONSEQUENCE: sendMail(CC=, Content=Process  ${Process Name} on ${Internal.Agent Name} is using more than 2G of RAM!, From=HawkAgent@mgmt, Mail Server=smtp.wachovia.net, Subject=Process  ${Process Name} on ${Internal.Agent Name} is using more than 2G of RAM!, To=cib.tibco.support@wachovia.com) 
RULEBASE: prodems05_ems_custom 
	 OBJECT: prod.ais.sec20ibprod.request.deoDataRequestObjectMessage
		 TEST: (pendingMessageCount >= 2)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: Possible DES problem, To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
		 TEST: (pendingMessageCount >= 4)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=URGENT: Restart all instances of DES., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
		 TEST: (pendingMessageCount < 2)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is chugging along.... No action required., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
	 OBJECT: prod.ais.sec20ibprod.request.MATRIX
		 TEST: ((pendingMessageCount >= 4) AND (pendingMessageCount <= 10))
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: Possible MATRIX problem., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
		 TEST: (pendingMessageCount >= 10)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=URGENT: Restart all instances of MATRIX., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
		 TEST: (pendingMessageCount < 4)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is chugging along.... No action required., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
RULEBASE: prodems06_ems_base 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7222) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7222) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7222) is down., To=igor.kantor1@my2way.com) 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7224) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7224) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7224) is down., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
RULEBASE: prodems06_ems_custom 
	 OBJECT: prod.ais.sec20ibprod.request.deoDataRequestObjectMessage
		 TEST: (pendingMessageCount >= 2)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: Possible DES problem., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
		 TEST: (pendingMessageCount >= 4)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount}  pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=URGENT: Restart all instances of DES., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
		 TEST: (pendingMessageCount < 2)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is chugging along.... No action required., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
	 OBJECT: prod.ais.sec20ibprod.request.MATRIX
		 TEST: ((pendingMessageCount >= 4) AND (pendingMessageCount <= 10))
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: Possible MATRIX problem., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
		 TEST: (pendingMessageCount >= 10)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=URGENT: Restart all instances of MATRIX., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
		 TEST: (pendingMessageCount < 4)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is chugging along.... No action required., To=FI.supplevel2@wachovia.com,7046040600@vtext.com) 
RULEBASE: shared_rvrd_base 
		 TEST: (Process Count < 1)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} ${Process Name} is down.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} ${Process Name} is down., From=HawkAgent@hawk-mgmt, Mail Server=cm_mailhost.capmark.fund.com, Subject=${Internal.Agent Name} ${Process Name} is down., To=cib.tibco.support@wachovia.com) 
RULEBASE: tmsd01_ems_base 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7222) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7222) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7222) is down., To=igor.kantor1@my2way.com) 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7224) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7224) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7224) is down., To=igor.kantor1@my2way.com) 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7226) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7226) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7226) is down., To=igor.kantor1@my2way.com) 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7228) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7228) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7228) is down., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} ${numConnects} has reached the limit., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} ${numConnects} has reached the limit., To=igor.kantor1@my2way.com) 
RULEBASE: tmsd02_ems_base 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7222) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7222) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7222) is down., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 700) AND (numConnects <= 900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} has reached ${numConnects}., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} has reached ${numConnects}., To=igor.kantor1@my2way.com) 
RULEBASE: uatems01_ems_cdf_custom 
	 OBJECT: qa.cib.cdf.top.service.authentication.request
		 TEST: (pendingMessageCount >= 25)
			 CONSEQUENCE: postCondition(conditionName=${Posted.RED_ALERT}) 
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending to be consumed., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is not moving., To=vishal.bhide@wachovia.com;kedar.kane@wachovia.com;kishor.kumar@wachovia.com) 
		 TEST: (pendingMessageCount InRange 20 25)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: ${Internal.Agent Name} queue ${name} is being consumed slowly., To=vishal.bhide@wachovia.com;kedar.kane@wachovia.com;kishor.kumar@wachovia.com) 
			 CONSEQUENCE: sendAlertMedium(alertMsg=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 20)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is normal., To=vishal.bhide@wachovia.com;kedar.kane@wachovia.com;kishor.kumar@wachovia.com) 
	 OBJECT: qa.cib.cdf.top.service.authorization.request
		 TEST: (pendingMessageCount >= 25)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending to be consumed., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is not moving., To=vishal.bhide@wachovia.com,kedar.kane@wachovia.com,kishor.kumar@wachovia.com) 
		 TEST: (pendingMessageCount InRange 20 25)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: ${Internal.Agent Name} queue ${name} is backing up., To=vishal.bhide@wachovia.com,kedar.kane@wachovia.com,kishor.kumar@wachovia.com) 
			 CONSEQUENCE: sendAlertMedium(alertMsg=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 20)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is normal., To=vishal.bhide@wachovia.com,kedar.kane@wachovia.com,kishor.kumar@wachovia.com) 
	 OBJECT: qa.cib.cdf.top.service.userpreferences.request
		 TEST: (pendingMessageCount >= 25)
			 CONSEQUENCE: sendAlertMedium(alertMsg=Queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount}  messages pending to be consumed., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is not moving., To=vishal.bhide@wachovia.com,kedar.kane@wachovia.com,kishor.kumar@wachovia.com) 
		 TEST: (pendingMessageCount InRange 20 25)
			 CONSEQUENCE: sendAlertMedium(alertMsg=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is moving slowly., To=vishal.bhide@wachovia.com,kishor.kumar@wachovia.com,kedar.kane@wachovia.com) 
		 TEST: (pendingMessageCount < 20)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is normal., To=vishal.bhide@wachovia.com,kedar.kane@wachovia.com,kishor.kumar@wachovia.com) 
	 OBJECT: uat.cib.cdf.service.authorization.request
		 TEST: (pendingMessageCount >= 25)
			 CONSEQUENCE: sendAlertMedium(alertMsg=${Internal.Agent Name} queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount}  messages pending to be consumed., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is not moving., To=onesource.support@wachovia.com) 
		 TEST: (pendingMessageCount InRange 20 25)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: ${Internal.Agent Name} queue ${name} is backing up., To=onesource.support@wachovia.com) 
			 CONSEQUENCE: sendAlertMedium(alertMsg=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 20)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is normal., To=onesource.support@wachovia.com) 
	 OBJECT: uat.cib.cdf.service.userpreferences.request
		 TEST: (pendingMessageCount >= 25)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending to be consumed., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is not moving., To=onesource.support@wachovia.com) 
		 TEST: (pendingMessageCount InRange 20 25)
			 CONSEQUENCE: sendAlertMedium(alertMsg=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 20)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is normal., To=onesource.support@wachovia.com) 
RULEBASE: uatems01_ems_itd_custom 
	 OBJECT: uat.wachovia.CIB.iTD.tradesphere.domain.request
		 TEST: (pendingMessageCount >= 15)
			 CONSEQUENCE: postCondition(conditionName=${Posted.RED_ALERT}) 
			 CONSEQUENCE: sendAlertMedium(alertMsg=${Internal.Agent Name} queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount}  messages pending to be consumed which is more than the current threshold of 15., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is not moving., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
		 TEST: (pendingMessageCount InRange 10 15)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: ${Internal.Agent Name} queue ${name} is being consumed slowly., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
			 CONSEQUENCE: sendAlertLow(alertMsg=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 10)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is normal., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
	 OBJECT: uat.wachovia.CIB.iTD.tradesphere.top.request
		 TEST: (pendingMessageCount >= 15)
			 CONSEQUENCE: postCondition(conditionName=${Posted.RED_ALERT}) 
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} queue ${name} is not moving.) 
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending to be consumed which is more than the current threshold of 15., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} queue ${name} is not moving., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
		 TEST: (pendingMessageCount InRange 10 15)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=WARNING: ${Internal.Agent Name} queue ${name} is being consumed slowly., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
			 CONSEQUENCE: sendAlertMedium(alertMsg=${Internal.Agent Name} queue ${name} has ${pendingMessageCount} messages pending.) 
		 TEST: (pendingMessageCount < 10)
			 CONSEQUENCE: sendMail(CC=, Content=${Internal.Agent Name} queue ${name} is being consumed normally., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=INFO: ${Internal.Agent Name} queue ${name} is normal., To=daryl.sutton@wachovia.com,mark.evans@wachovia.com,babak.keradman@wachovia.com,bruce.thofson1@wachovia.com) 
RULEBASE: uatems05_ems_base 
		 TEST: (running isFalse )
			 CONSEQUENCE: sendAlertHigh(alertMsg=${Internal.Agent Name} EMS (instance 7222) is down.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} EMS (instance 7222) is down., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} EMS (instance 7222) is down., To=igor.kantor1@my2way.com) 
		 TEST: ((numConnects >= 1700) AND (numConnects <= 1900))
			 CONSEQUENCE: sendAlertMedium(alertMsg=${numConnects} is reaching the limit.) 
		 TEST: (numConnects > 1900)
			 CONSEQUENCE: sendAlertHigh(alertMsg=${numConnects} has reached the limit.) 
			 CONSEQUENCE: sendMail(CC=cib.tibco.support@wachovia.com, Content=${Internal.Agent Name} has reached ${numConnects}., From=HawkAgent@hawk-mgmt, Mail Server=smtp.wachovia.net, Subject=${Internal.Agent Name} has reached ${numConnects}., To=igor.kantor1@my2way.com) 
